{"ast":null,"code":"var _jsxFileName = \"/Users/christopherdanielson/Developer/full-stack-open/part2/phonebook/src/components/FilteredPersons.js\";\nimport Person from './Person';\nimport personService from '../services/persons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst removePerson = id => {\n  if (window.confirm(\"Are you sure? \")) {\n    personService.remove(id).then(response => {\n      console.log(`attempting to remove person with id: ${id}`);\n    });\n  }\n};\nconst FilteredPersons = ({\n  filter,\n  persons\n}) => {\n  const re = new RegExp(filter, \"i\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: persons.filter(person => person.name.match(re)).map(person => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Person, {\n          name: person.name,\n          number: person.number\n        }, person.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removePerson(person.id),\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false);\n};\n_c = FilteredPersons;\nexport default FilteredPersons;\nvar _c;\n$RefreshReg$(_c, \"FilteredPersons\");","map":{"version":3,"names":["Person","personService","jsxDEV","_jsxDEV","Fragment","_Fragment","removePerson","id","window","confirm","remove","then","response","console","log","FilteredPersons","filter","persons","re","RegExp","children","person","name","match","map","number","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/christopherdanielson/Developer/full-stack-open/part2/phonebook/src/components/FilteredPersons.js"],"sourcesContent":["import Person from './Person'\nimport personService from '../services/persons'\n\nconst removePerson = (id) => {\n  if (window.confirm(\"Are you sure? \")) {\n    personService\n      .remove(id)\n      .then(response => {\n        console.log(`attempting to remove person with id: ${id}`)\n      })\n  }\n}\n\nconst FilteredPersons = ({filter, persons}) => {\n  const re = new RegExp(filter, \"i\")\n  return (\n    <>\n      {\n        persons.filter((person => person.name.match(re)))\n          .map(person => {\n            return (\n              <>\n                <Person \n                  key={person.id} \n                  name={person.name} \n                  number={person.number}\n                />\n                <button onClick={() => removePerson(person.id)}>\n                  delete\n                </button>\n              </>\n            )\n          })\n      }\n    </>\n  )\n}\n\nexport default FilteredPersons"],"mappings":";AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,aAAa,MAAM,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,YAAY,GAAIC,EAAE,IAAK;EAC3B,IAAIC,MAAM,CAACC,OAAO,CAAC,gBAAgB,CAAC,EAAE;IACpCR,aAAa,CACVS,MAAM,CAACH,EAAE,CAAC,CACVI,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAE,wCAAuCP,EAAG,EAAC,CAAC;IAC3D,CAAC,CAAC;EACN;AACF,CAAC;AAED,MAAMQ,eAAe,GAAGA,CAAC;EAACC,MAAM;EAAEC;AAAO,CAAC,KAAK;EAC7C,MAAMC,EAAE,GAAG,IAAIC,MAAM,CAACH,MAAM,EAAE,GAAG,CAAC;EAClC,oBACEb,OAAA,CAAAE,SAAA;IAAAe,QAAA,EAEIH,OAAO,CAACD,MAAM,CAAEK,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,KAAK,CAACL,EAAE,CAAE,CAAC,CAC9CM,GAAG,CAACH,MAAM,IAAI;MACb,oBACElB,OAAA,CAAAE,SAAA;QAAAe,QAAA,gBACEjB,OAAA,CAACH,MAAM;UAELsB,IAAI,EAAED,MAAM,CAACC,IAAK;UAClBG,MAAM,EAAEJ,MAAM,CAACI;QAAO,GAFjBJ,MAAM,CAACd,EAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGf,CAAC,eACF1B,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMxB,YAAY,CAACe,MAAM,CAACd,EAAE,CAAE;UAAAa,QAAA,EAAC;QAEhD;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,eACT,CAAC;IAEP,CAAC;EAAC,gBAEN,CAAC;AAEP,CAAC;AAAAE,EAAA,GAvBKhB,eAAe;AAyBrB,eAAeA,eAAe;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}