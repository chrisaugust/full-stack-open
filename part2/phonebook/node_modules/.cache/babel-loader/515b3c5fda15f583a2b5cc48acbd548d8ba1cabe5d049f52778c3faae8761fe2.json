{"ast":null,"code":"var _jsxFileName = \"/Users/christopherdanielson/Developer/full-stack-open/part2/phonebook/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport personService from './services/persons';\nimport axios from 'axios';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport FilteredPersons from './components/FilteredPersons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n    // axios\n    //   .get('http://localhost:3001/persons')\n    //   .then(response => setPersons(response.data))\n  }, []);\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  const addPerson = event => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNumber\n    };\n    console.log(personObject);\n\n    // prevent duplicate names from being added\n    if (nameIsNotAlreadyInPhonebook(newName)) {\n      personService.create(personObject).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      });\n      // axios\n      //   .post('http://localhost:3001/persons', personObject)\n      //   .then(response => {\n      //     setPersons(persons.concat(response.data))\n      //     setNewName('')\n      //     setNewNumber('')\n      //   })\n    } else {\n      alert(`${newName} is already added to phonebook`);\n    }\n  };\n  const nameIsNotAlreadyInPhonebook = name => {\n    const names = persons.map(person => person.name);\n    return !names.includes(name);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Phonebook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      value: filter,\n      handler: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PersonForm, {\n      addPerson: addPerson,\n      newName: newName,\n      newNumber: newNumber,\n      handleNameChange: handleNameChange,\n      handleNumberChange: handleNumberChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilteredPersons, {\n      filter: filter,\n      persons: persons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"p/QfHQk/ebbK1mRR3V0SAylUbng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","personService","axios","Filter","PersonForm","FilteredPersons","jsxDEV","_jsxDEV","App","_s","persons","setPersons","newName","setNewName","newNumber","setNewNumber","filter","setFilter","getAll","then","initialPersons","handleNameChange","event","target","value","handleNumberChange","handleFilterChange","addPerson","preventDefault","personObject","name","number","console","log","nameIsNotAlreadyInPhonebook","create","returnedPerson","concat","alert","names","map","person","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","handler","_c","$RefreshReg$"],"sources":["/Users/christopherdanielson/Developer/full-stack-open/part2/phonebook/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport axios from 'axios'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport FilteredPersons from './components/FilteredPersons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n     personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n      // axios\n      //   .get('http://localhost:3001/persons')\n      //   .then(response => setPersons(response.data))\n  }, [])\n \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    console.log(personObject)\n\n    // prevent duplicate names from being added\n    if (nameIsNotAlreadyInPhonebook(newName)) {\n      personService\n        .create(personObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n        })\n      // axios\n      //   .post('http://localhost:3001/persons', personObject)\n      //   .then(response => {\n      //     setPersons(persons.concat(response.data))\n      //     setNewName('')\n      //     setNewNumber('')\n      //   })\n    } else {\n      alert(`${newName} is already added to phonebook`)\n    }\n  }\n\n  const nameIsNotAlreadyInPhonebook = (name) => {\n    const names = persons.map(person => person.name)\n    return !names.includes(name)\n  }\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter \n        value={filter} \n        handler={handleFilterChange} \n      />\n\n      <h2>Add new</h2>\n\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <FilteredPersons \n        filter={filter} \n        persons={persons} \n      />\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}